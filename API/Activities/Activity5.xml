<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="5cfb026a-d43c-42e9-a457-d9d31ba55aba" created="3.53.0" activeEnvironment="Default environment" encryptionMode="Not encrypted" name="API_Actiivty_5" resourceRoot="" projectVersion="" updated="3.53.0 2024-05-13T12:06:25Z" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="b636cddd-2731-49d9-8f3c-31b94ebe6ef8" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://ipwhois.app" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings id="ab620e48-23dc-4309-ab9b-c1975780d3ba"/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://ipwhois.app</con:endpoint></con:endpoints><con:resource name="IP" path="/json/{IP}" id="15c4772d-c7cc-4825-b47f-88f8f715326e"><con:settings/><con:parameters/><con:method name="IP" id="80f894a5-73cc-4d9b-9ae6-44f75a229291" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>IP</con:name><con:value>IP</con:value><con:style>TEMPLATE</con:style><con:default>IP</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="http://ipwhois.app/json/149.147.244.212">ns:Response</con:element></con:representation><con:request name="Request 1" id="2ef4aa88-0f16-48fd-973a-b27ef8de6d48" mediaType="application/json"><con:settings/><con:endpoint>http://ipwhois.app</con:endpoint><con:parameters><con:entry key="IP" value="IP"/></con:parameters><con:parameterOrder><con:entry>IP</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="efc28d98-3fc9-4f60-867b-5a05b5091ed4" name="http://ipwhois.app Test Suite"><con:settings id="aebec685-8a02-4206-8cd5-f0e0fed1660e"/><con:runType>SEQUENTIAL</con:runType><con:testCase id="ec22244e-5fde-4f73-80f8-c59ddeff7f60" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="http://ipwhois.app Test Case 1" searchProperties="true" timeout="0"><con:settings/><con:testStep type="datasource" name="ipAddressList" id="087dd8b8-95eb-4630-95dc-942a6ab1e53b"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Excel"><con:configuration><file>C:/New IBM/2024/API Activity/IPAddressList.xlsx</file><worksheet/><cell>A2</cell><ignoreEmpty>false</ignoreEmpty><evaluateFormulas>false</evaluateFormulas></con:configuration></con:dataSource><con:shared>false</con:shared><con:restartShared>false</con:restartShared><con:property>IP Address</con:property><con:restartOnRun>true</con:restartOnRun><con:stopDatasourceExhausted>false</con:stopDatasourceExhausted></con:config></con:testStep><con:testStep type="datasourceloop" name="Data Source Loop" id="5d57889a-3193-4efb-9761-a63f3efbeb64"><con:settings/><con:config><dataSourceStep>ipAddressList</dataSourceStep><targetStep>Request 1</targetStep><discardResults>true</discardResults></con:config></con:testStep><con:testStep type="restrequest" name="Request 1" id="dc902210-320d-422a-9cef-4cae59b1c141"><con:settings/><con:config service="http://ipwhois.app" resourcePath="/json/{IP}" methodName="IP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request 1" id="2ef4aa88-0f16-48fd-973a-b27ef8de6d48" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://ipwhois.app</con:endpoint><con:request/><con:originalUri>http://ipwhois.app/json/149.147.244.212</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="70f9efe0-9cda-4ee7-a057-80669fbef847" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b9c0f860-2f2c-4a84-b620-c6b9b3e80755" name="JSONPath Match"><con:configuration><path>$['country']</path><content>"Kuwait"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:entry key="IP" value="${ipAddressList#IP Address}"/></con:parameters><con:parameterOrder><con:entry>IP</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>087dd8b8-95eb-4630-95dc-942a6ab1e53b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dc902210-320d-422a-9cef-4cae59b1c141</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5d57889a-3193-4efb-9761-a63f3efbeb64</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:authRepository/><con:tags/></con:soapui-project>